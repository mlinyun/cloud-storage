# 配置项目应用名称
spring.application.name=cloud-storage

# Web 项目基础配置
# 设置项目启动的端口号
server.port=8101
# 设置项目路径，构成 url 地址的一部分
server.servlet.context-path=/api

# 日志配置
# 设置日志级别
logging.level.root=info
# 生成日志文件
logging.file.name=./logs/cloud-storage-site.log

# 数据源基本配置
# 配置数据库连接的url
spring.datasource.url=jdbc:mysql://localhost:3306/cloud_storage?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&allowMultiQueries=true
# 指定数据库驱动程序的类
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 配置数据库的用户名
spring.datasource.username=root
# 配置数据库的密码
spring.datasource.password=123456

# Spring Data JPA 配置
# 指定定义或更改数据库结构方式：update：如果数据库架构与实体类映射不一致，Hibernate 会尝试更新数据库架构以匹配实体类
spring.jpa.properties.hibernate.hbm2ddl.auto=update
# 在控制台显示 Hibernate 的 SQL
spring.jpa.show-sql=true
# 指定 Hibernate 的物理命名策略，实体类名被映射为表名，实体类的属性名被映射为列名（驼峰改为下划线）
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view=false

# MyBatis 配置
# 配置 mybatis-config.xml 文件路径 mybatis-config.xml 中配置 MyBatis 基础属性
mybatis.config-location=classpath:mybatis/mybatis-config.xml
# 配置 Mapper 文件对应的 XML 文件路径
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
# 配置项目中实体类包路径
mybatis.type-aliases-package=com.mlinyun.cloudstorage.model

# MyBatisPlus 配置项
# 设置逻辑删除的值为 1。在使用 MyBatis-Plus 进行逻辑删除时，数据库中相应字段的值将被修改为该值
mybatis-plus.global-config.db-config.logic-delete-value=1
# 设置逻辑未删除的值为 0。在使用 MyBatis-Plus 进行逻辑删除时，数据库中相应字段的值将被修改为该值
mybatis-plus.global-config.db-config.logic-not-delete-value=0
# 设置全局逻辑删除实体字段名
mybatis-plus.global-config.db-config.logic-delete-field=isDelete
# 指定 MyBatis Mapper XML 文件的路径， MyBatis-Plus 将扫描该路径下的 XML 文件，
# 并将其解析成对应的 SQL 映射语句
mybatis-plus.mapper-locations=classpath:mybatis/mapper/*.xml
# 设置 MyBatis 的日志实现类为 org.apache.ibatis.logging.stdout.StdOutImpl。
# 这意味着 MyBatis 将使用标准输出来记录 SQL 执行日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# 关闭驼峰命名规则映射
mybatis-plus.configuration.map-underscore-to-camel-case=false
